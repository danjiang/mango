---
title:  如何设计有效的帮助
author: 但江
location: 成都 
category: design
---

要设计有效的帮助，首先需要知道用户的状态，如果**新手用户**，他们最需要知道是产品的核心功能，如何快速地上手；如果是**专家用户**，产品功能和功能之间的运作机制已经很熟悉，他们想要知道的是有没有更快的地方式把一些任务自动化，或者扩展已有的功能；如果是**中间用户**，他们已经会使用常用的功能，虽然不太清楚其运作的机制，使用产品的方式不是最高效或者最便捷的方式，但是能使用产品达到自己的目的，这种类型的用户是最多的。

只有明白了用户处于什么状态，才能提供有效的帮助，一个典型的列子就是开源软件产品的文档，通常都会分为三部分：快速上手，使用指南，作出贡献，对于第一次接触这个开源软件产品的程序员，当然想尝试使用看看能不能解决现有的问题，所以会阅读快速上手，对于已经在自己开发的项目中使用了该开源软件产品的程序员，就会阅读使用指南，更多地了解开源软件产品运作机制，为了更有效的使用开源软件产品，对于一个希望扩展现有开源软件产品功能的程序员，就会去了解如何作出贡献来。

####情景式帮助

![Calendar5](/images/calendar5.png)

在用户使用产品的过程中，根据现有的情况，帮助他们完成下一步的操作，如上图中告诉用户如何新增一个事件，帮助**新手用户**快速上手。

####向导和默认值

![Wunderlist Inbox](/images/wunderlist-inbox.png)

向导这种方式在 Windows 上非常常见，大家在安装新软件的时候就会看到这种方式，上一步操作完成才能进行下一步，每一步都有详细的操作说明，如今很多手机应用也使用了这种方式来协助用户初始化和介绍新功能，我并不认为这是一种很好的处理方式，用户在第一次使用应用时，还不是很清楚应用有什么样的功能，也不知道这些设置项会带来什么样的影响，可以采用先设置默认值，让用户即刻感受应用的功能，熟悉功能后，用户再去修改一些设置项就会比较清晰其带来的效果。

####知识库

![Calorie](/images/calorie.png)

知识库，更常见的说法是帮助中心或者常见问题，如果是**新手用户**，不能快速地上手应该就会删除应用说再见了，对于已经上手的**中间用户**，不会轻易地放弃应用，遇到困难的时候都会都会倾向于寻找此类信息，所以在知识库中应该有详细的功能描述，良好的信息架构便于用户查找问题的答案。
